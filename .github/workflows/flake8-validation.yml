name: Flake8 Validation

# Define quando o workflow será executado (push e pull request para a branch 'main')
on:
  push:
    branches:
      - main  # Ou a branch que você deseja monitorar
  pull_request:
    branches:
      - main  # Ou a branch que você deseja monitorar

jobs:
  flake8:
    runs-on: ubuntu-latest  # Usaremos uma máquina virtual Ubuntu

    steps:
      # 1. Checkout do código
      - name: Checkout code
        uses: actions/checkout@v4
      # Change directory
      - name: Change to back-end folder
        run: cd back-end

      # 2. Configurar o Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'  # Mude para a versão de Python que você está utilizando

      # 3. Instalar o Poetry
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      # 4. Configurar o Poetry para não criar ambientes virtuais (opcional)
      - name: Configure Poetry to not create virtual environments
        run: |
          poetry config virtualenvs.create false

      # 5. Entrar na pasta back-end
      - name: Change to back-end directory
        run: |
          cd back-end

      # 6. Instalar as dependências com o Poetry
      - name: Install dependencies
        run: |
          poetry install

      # 7. Rodar o Flake8 na pasta back-end
      - name: Run Flake8
        run: |
          poetry run flake8 .  # Rodar o Flake8 dentro da pasta back-end no ambiente gerenciado pelo Poetry
